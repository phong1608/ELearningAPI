version: '3.9'
services:

  mongodb:
      container_name: mongodb_container
      image: mongo:latest
      restart: always
      ports:
        - 27017:27017
      volumes:
        - ./docker-volumes/data:/data/db
  messagebroker:
    image: rabbitmq:management
    container_name: messagebroker
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  discountdb:
    container_name: disocuntdb_container
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=DiscountDb
    ports:
      - "5432:5432"
      
    volumes:
      - postgres_discount:/var/lib/postgressql/data/
  coursedb:
    container_name: coursedb_container
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CourseDb
    ports:
      - "5433:5432"
      
    volumes:
      - postgres_course:/var/lib/postgressql/data/

  auth:
    container_name: auth_container
    build:
      context: ../AuthService
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4000:4000
    env_file: ../AuthService/.env
    environment:
      - MONGODB_URL=mongodb://mongodb_container:27017/auth
      - JWT_SECRET_KEY="6f1b869691544d8a8c73a79006fc71e8"
      - PORT=4000
      



  course:
    container_name: course_container
    build:
      context: ../Course.API
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4001:4001
    env_file: ../Course.API/.env
    environment:
      - JWT_SECRET_KEY="6f1b869691544d8a8c73a79006fc71e8"
      - RABBITMQ_URL=amqp://messagebroker:5672
      - PORT=4001
      - DATABASE_HOST=coursedb
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=CourseDb
    depends_on:
      - messagebroker
      - coursedb
    


  cart:
    container_name: cart_container
    build:
      context: ../Cart.API
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4002:4002
    env_file: ../Cart.API/.env
    environment:
      - MONGODB_URL=mongodb://mongodb_container:27017/cart
      - JWT_SECRET_KEY="6f1b869691544d8a8c73a79006fc71e8"
      - RABBITMQ_URL=amqp://messagebroker:5672
      - PORT=4002
    depends_on:
      - messagebroker
  
  order:
    container_name: order_container
    build:
      context: ../Order.API
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4003:4003
    env_file: ../Order.API/.env
    environment:
      - MONGODB_URL=mongodb://mongodb_container:27017/order
      - JWT_SECRET_KEY="6f1b869691544d8a8c73a79006fc71e8"
      - RABBITMQ_URL=amqp://messagebroker:5672
      - PORT=4003
    depends_on:
      - messagebroker



  review:
    container_name: review_container
    build:
      context: ../ReviewService
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4004:4004
    env_file: ../ReviewService/.env
    environment:
      - MONGODB_URL=mongodb://mongodb_container:27017/order
      - JWT_SECRET_KEY="6f1b869691544d8a8c73a79006fc71e8"
      - RABBITMQ_URL=amqp://messagebroker:5672
      - PORT=4004
    depends_on:
      - messagebroker

  discount:
    container_name: discount_container
    build:
      context: ../Discount.API
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4005:4005
    env_file: ../Discount.API/.env
    environment:
      - JWT_SECRET_KEY="6f1b869691544d8a8c73a79006fc71e8"
      - RABBITMQ_URL=amqp://messagebroker:5672
      - PORT=4005
      - DATABASE_HOST=discountdb
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=DiscountDb
    depends_on:
      - messagebroker
      - discountdb
    
  
  yarpapigateway:
    container_name: yarpapigateway
    build:
      context: ../GatewayService
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - 6000:8080
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    
volumes:
  postgres_course:
  postgres_discount:
